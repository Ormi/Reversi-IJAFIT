
package timogui;

import java.awt.Container;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.text.DefaultCaret;

/**
 *
 * @author xtimko00
 */
public class MultiplayerGUI extends javax.swing.JFrame {

    private String username;  // username hraca co zapne MP
    private int frameSize;
    private int freezeEnable = 1;
    private boolean freezeEnableBool;
    private long unfreeze; 
    private int freeze;
    private int freezeDisks;
    /*xormos00*/
    static final boolean DEBUG = true;
    BufferedReader in;
    final PrintWriter out;
    public ReversiGame timo;
    public String game;
    /*xormos00*/
    
    /**
     * Vytvori novy form MultiplayerGUI
     * @param username meno hraca zdielana od samotneho hraca/klienta
     * @param out2 socket servera
     */
    public MultiplayerGUI(String username, PrintWriter out2) {
        initComponents();
        setLocationRelativeTo(null);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        DefaultCaret caret = (DefaultCaret) chatTextArea.getCaret();
        caret.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);
        
        /*xormos00*/
        this.out = out2;
        this.username = username;
        /*xormos00*/ 

        usernameName.setText(username);

        /* Po stlaceni ENTER */
        inputTextArea.addKeyListener(new KeyListener(){
        @Override
        public void keyTyped(KeyEvent e) {
        }

        @Override
        public void keyPressed(KeyEvent e) {
            if(e.getKeyCode() == KeyEvent.VK_ENTER)
                  //Odososle spravu na server, ktora to rozosle vsetkym hracom
                  // @override xormos00
                  out.println(inputTextArea.getText());
        }

        @Override
        public void keyReleased(KeyEvent e) {
            if(e.getKeyCode() == KeyEvent.VK_ENTER)
                inputTextArea.setText("");
        }
     });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        usernameLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        chatTextArea = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        onlineUsersArea = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        inputTextArea = new javax.swing.JTextArea();
        buttonSend = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        usernameName = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jSpinner2 = new javax.swing.JSpinner();
        jSpinner3 = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Multiplayer lobby");

        usernameLabel.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        usernameLabel.setText("Username:");

        jLabel2.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Online Users ");

        chatTextArea.setEditable(false);
        chatTextArea.setColumns(20);
        chatTextArea.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        chatTextArea.setLineWrap(true);
        chatTextArea.setRows(5);
        chatTextArea.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        chatTextArea.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                chatTextAreaCaretUpdate(evt);
            }
        });
        jScrollPane2.setViewportView(chatTextArea);

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        onlineUsersArea.setEditable(false);
        onlineUsersArea.setColumns(20);
        onlineUsersArea.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        onlineUsersArea.setRows(5);
        jScrollPane1.setViewportView(onlineUsersArea);

        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        inputTextArea.setColumns(20);
        inputTextArea.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        inputTextArea.setLineWrap(true);
        inputTextArea.setRows(5);
        jScrollPane3.setViewportView(inputTextArea);

        buttonSend.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        buttonSend.setText("Send");
        buttonSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSendActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jButton1.setText("Start game");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        usernameName.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        usernameName.setText("kek");

        jButton2.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jButton2.setText("Load game");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Choose board size");

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jRadioButton1.setText("6x6");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jRadioButton2.setSelected(true);
        jRadioButton2.setText("8x8");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jRadioButton3.setText("10x10");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton4);
        jRadioButton4.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jRadioButton4.setText("12x12");
        jRadioButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton4ActionPerformed(evt);
            }
        });

        jCheckBox1.setText("Enable freezing");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Number of frozen disks:");

        jLabel4.setText("Unfreeze length:");

        jLabel5.setText("Freeze length:");

        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(3, 0, 99, 1));

        jSpinner2.setModel(new javax.swing.SpinnerNumberModel(Long.valueOf(3L), Long.valueOf(0L), Long.valueOf(99L), Long.valueOf(1L)));

        jSpinner3.setModel(new javax.swing.SpinnerNumberModel(7, 0, 99, 1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3)
                            .addComponent(jScrollPane2)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(buttonSend, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(usernameLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(usernameName, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                                .addComponent(jButton1)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(40, 40, 40))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jRadioButton3)
                                .addGap(18, 18, 18)
                                .addComponent(jRadioButton4))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jRadioButton1)
                                .addGap(18, 18, 18)
                                .addComponent(jRadioButton2))
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(74, 74, 74)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(4, 4, 4)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSpinner3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jCheckBox1)
                                .addGap(149, 149, 149))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(usernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(usernameName)
                        .addComponent(jButton1)
                        .addComponent(jButton2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonSend))
                    .addComponent(jScrollPane1))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jCheckBox1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jSpinner3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRadioButton1)
                            .addComponent(jRadioButton2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRadioButton3)
                            .addComponent(jRadioButton4))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /* Poslanie textu do chatu */
    private void buttonSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSendActionPerformed
       printTextField(username + " : " + inputTextArea.getText() + "\n");

       inputTextArea.setText(null);

    }//GEN-LAST:event_buttonSendActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        MPstartGame();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        frameSize = 6;
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        frameSize = 8;
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        frameSize = 10;
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jRadioButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton4ActionPerformed
        frameSize = 12;
    }//GEN-LAST:event_jRadioButton4ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            new loadGameGUI(out, 1).setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(MenuGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void chatTextAreaCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_chatTextAreaCaretUpdate


    
    }//GEN-LAST:event_chatTextAreaCaretUpdate

    /**
     * Odoslanie spravy do textoveho okna daneho hraca
     * @param text sprava pre chat
     */
    public void printTextField(String text) {
        chatTextArea.setText(chatTextArea.getText() + text);
    }
    /**
     * Odoslanie spravy obsahujucu mena hracov, ktory su online danemu hracovy
     * @param text sprava pre chat
     */
    public void printPlayerField(String text) {
        onlineUsersArea.setText(onlineUsersArea.getText() + text);
    }

    /**
     * Premazanie textovych poli
     * Chat okna a okna s menami aktualne pripojenych hracov
     */
    public void erasePlayerField() {
        onlineUsersArea.setText("");
    }
    
    public void eraseChatField() {
        chatTextArea.setText("");
    }    
    
    /**
     * Vytvara defautlnu Reversi hru a dava signal pre nacitanie ulozenej hry
     * zo suboru pre load_game
     * @param MPload meno suboru pre nacitanie rozohranej MP hry
     */
    public void startLoadMP (String MPload) {
        timo = new ReversiGame(0,0,false,0,0,0,out);    
        timo.load_game("LOAD" + MPload);           
    }
    
    /**
     * Volanie funkcie pre nasepkavanie tahu, podla hraca, ktory je na tahu
     */
    public void MPHint() {
        timo.MPHint();
    }

    /**
     * Inicializuje novu hru na pokyn servera cez klienta
     * Hrac ktory vyzve na hru urcuje jej konfiguraciu, ktora sa musi cez server
     * predat aj druhemu hracovi
     * @param startGame pociatocna konfiguracia hry
     *          frameSize\n
     *          freezeEnable\n
     *          freezeDisks\n
     *          unfreeze\n
     *          freeze\n
     */
    public void startGame(String startGame) {
        System.out.println("Spustam hru pre hraca " + username);
        System.out.println("Info o hre" + startGame);        
        
        frameSize = Integer.parseInt(startGame.substring(0,startGame.indexOf("\n")));
                startGame=startGame.substring(startGame.indexOf("\n")+1); 
                
        freezeEnable = Integer.parseInt(startGame.substring(0,startGame.indexOf("\n")));
                startGame=startGame.substring(startGame.indexOf("\n")+1); 
                
        freezeDisks = Integer.parseInt(startGame.substring(0,startGame.indexOf("\n")));
                startGame=startGame.substring(startGame.indexOf("\n")+1); 
                
        unfreeze = Integer.parseInt(startGame.substring(0,startGame.indexOf("\n")));
        unfreeze = unfreeze * 1000000000;
                startGame=startGame.substring(startGame.indexOf("\n")+1); 
                
        freeze = Integer.parseInt(startGame.substring(0,startGame.indexOf("\n")));
        freeze = freeze * 1000;
                startGame=startGame.substring(startGame.indexOf("\n")+1);         
        
        if (freezeEnable == 0) {
            freezeEnableBool = true;
        } else {
            freezeEnableBool = false;
        }
        
        if (DEBUG) { System.out.println("Spustam hru" + "\n" + frameSize + "\n" + freezeEnable + "\n" + freezeDisks + "\n" + unfreeze + "\n" + freeze); }    
        
        timo = new ReversiGame(frameSize,0,freezeEnableBool,freezeDisks,unfreeze,freeze, out);
    }

    /**
     * Nacita protokol reprezentacie hry na povel serveru cez klienta
     * @param game protokol reprezntacie hry
     */
    public void loadGame(String game) {
        System.out.println("Nacitavam hru pre hraca " + username);
        System.out.println(game);
        
        timo.load_game(game);
    }

    /* Posledny krok pred vstupom do MP hrania */
    public void MPstartGame () {
            final JFrame MPframe = new JFrame();
//            MPframe.setTitle("Choose your opponent");
            Container c = MPframe.getContentPane();
            Dimension d = new Dimension(230,200);
            c.setPreferredSize(d);
            MPframe.pack();
            MPframe.setLocationRelativeTo(null);
            MPframe.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            MPframe.setResizable(false);
            MPframe.setVisible(true);
            MPframe.setLayout(null);

            JButton buttonStart = new JButton();
            buttonStart.setFont(new java.awt.Font("Monospaced", 0, 24));
            buttonStart.setText("START");
            buttonStart.setBounds(65, 100, 120, 41);

            final JTextField chooseOpp = new JTextField();
            chooseOpp.setFont(new java.awt.Font("Monospaced", 0, 14));
            chooseOpp.setBounds(40, 65, 151, 27);

            JLabel opp = new JLabel();
            opp.setFont(new java.awt.Font("Monospaced", 0, 14));
            opp.setText("Choose your opponent");
            opp.setBounds(33, 30, 160, 30);

            chooseOpp.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // Odosiela socket serveru, ze dany hrac stlacil tlacidlo FIGHT
                // a zadal meno supera, server synchornizacia
                // Serveru sa posiela pociatocna konfiguracia hry
                if (jCheckBox1.isSelected() == true)
                    freezeEnable = 0;
                else
                    freezeEnable = 1;

                freezeDisks = (int) jSpinner1.getValue();
                unfreeze = ((long) jSpinner2.getValue());
                freeze = ((int) jSpinner3.getValue());
                
                if (DEBUG) { System.out.println(out + chooseOpp.getText() + "|" + frameSize + "|" + freezeEnable + "|" + freezeDisks + "|" + unfreeze + "|" + freeze); }

                out.println("FIGHT" + chooseOpp.getText() + "\n" + frameSize + "\n" + freezeEnable + "\n" + freezeDisks + "\n" + unfreeze + "\n" + freeze);
                System.out.println("MP hra proti: " + chooseOpp.getText());
                MPframe.dispose();
                }
            });

            buttonStart.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // Odosiela socket serveru, ze dany hrac stlacil tlacidlo FIGHT
                // a zadal meno supera, server synchornizacia
                // Serveru sa posiela pociatocna konfiguracia hry                
                if (jCheckBox1.isSelected() == true)
                    freezeEnable = 0;
                else
                    freezeEnable = 1;

                freezeDisks = (int) jSpinner1.getValue();
                unfreeze = ((long) jSpinner2.getValue());
                freeze = ((int) jSpinner3.getValue());

                out.println("FIGHT" + chooseOpp.getText() + "\n" + frameSize + "\n" + freezeEnable + "\n" + freezeDisks + "\n" + unfreeze + "\n" + freeze);
                System.out.println("MP hra proti: " + chooseOpp.getText());
                MPframe.dispose();
                }
            });



            MPframe.add(buttonStart);
            MPframe.add(chooseOpp);
            MPframe.add(opp);

    }



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton buttonSend;
    private javax.swing.JTextArea chatTextArea;
    private javax.swing.JTextArea inputTextArea;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JSpinner jSpinner3;
    private javax.swing.JTextArea onlineUsersArea;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JLabel usernameName;
    // End of variables declaration//GEN-END:variables
}
